{"java":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public TreeNode buildHelper(int[] inorder, int[] postorder, int inStart, int inEnd, int postStart, int postEnd){\r\n        \r\n        TreeNode node = new TreeNode(postorder[postEnd]);\r\n        if(inStart == inEnd && postStart == postEnd) return node;\r\n        int i;\r\n        for(i= inStart ; i<= inEnd; ++i){\r\n            if(inorder[i] == postorder[postEnd])\r\n                break;\r\n        }\r\n        int leftLength = i-inStart;\r\n        int rightLength = inEnd - i;\r\n        if(rightLength>0)\r\n            node.right = buildHelper(inorder, postorder, i+1, inEnd, postEnd - rightLength, postEnd-1);\r\n        if(leftLength >0)\r\n            node.left = buildHelper(inorder, postorder, inStart, i-1, postStart, postEnd - rightLength - 1);\r\n        return node;\r\n        \r\n    }\r\n    \r\n    public TreeNode buildTree(int[] inorder, int[] postorder) {\r\n        \r\n        if(inorder.length == 0 || postorder.length ==0 ) return null;\r\n        return buildHelper(inorder, postorder, 0, inorder.length - 1, 0, inorder.length-1);\r\n    }\r\n}"}