{"java":"public class LRUCache {\r\n int capacity = 0;\r\n  int count = 0;\r\n\r\n  Map<Integer, Nd> map  = new HashMap<>();\r\n\r\n  LinkedList<Nd> cacheList = new LinkedList<Nd>();\r\n  \r\n\r\n  public LRUCache(int capacity){\r\n    this.capacity = capacity;\r\n    // cacheList.clear();\r\n    //   System.out.println(\"when starting:\" );\r\n    // for (Nd nd :cacheList) System.out.println(nd.key + \",\" + nd.value);\r\n    // System.out.println(\"***************1\");\r\n  }\r\n\r\n  public int get(int key) {\r\n    // System.out.println(\"when getting key:\" + key);\r\n    // for (Nd nd :cacheList) System.out.println(nd.key + \",\" + nd.value);\r\n    // System.out.println(\"***************\");\r\n\r\n    if(map.containsKey(key)){\r\n    //   System.out.println(\"yes, contains\");\r\n      Nd n = map.get(key);\r\n      int val = n.value;\r\n      cacheList.remove(n);\r\n      cacheList.addFirst(n);\r\n      return val;\r\n    }\r\n    else return -1;\r\n  }\r\n\r\n\r\n  public void put(int key, int value) {\r\n    // System.out.println(\"when puting key:\"+ key);\r\n        // for (Nd nd :cacheList) System.out.println(nd.key + \",\" + nd.value);\r\n    // System.out.println(\"***************\");\r\n\r\n    if(!map.containsKey(key)){\r\n      if(count  == capacity){\r\n        map.remove(cacheList.getLast().key);\r\n        cacheList.removeLast();\r\n        count --;\r\n      }\r\n      Nd nd = new Nd(key, value);\r\n      cacheList.addFirst(nd);\r\n      map.put(key, nd);\r\n      count ++;\r\n    } else {\r\n      Nd nd = map.get(key);\r\n      cacheList.remove(nd);\r\n      nd.value = value;\r\n      cacheList.addFirst(nd);\r\n    }\r\n  }\r\n}\r\n\r\nclass Nd {\r\n    int key;\r\n    int value;\r\n\r\n    Nd(int key, int value){\r\n      this.key = key;\r\n      this.value = value;\r\n    }\r\n\r\n    // public boolean equals(Object obj) {\r\n    //   Nd nd = (Nd) obj;\r\n    //   return (this.key == nd.key) && (this.value == nd.value);\r\n    // }\r\n  }\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * LRUCache obj = new LRUCache(capacity);\r\n * int param_1 = obj.get(key);\r\n * obj.put(key,value);\r\n */"}